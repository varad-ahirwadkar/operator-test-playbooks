#!/bin/sh
set -o errexit

KIND_CMD=${1-{{ kind_bin_path }}}

# create registry container unless it already exists
reg_name='kind-registry'
reg_port='5000'
# running="$(docker inspect -f '{{ '{{' }}.State.Running{{ '}}' }}' "${reg_name}" 2>/dev/null || true)"
# if [ "${running}" == 'true' ]; then
docker rm -f "${reg_name}" || true
# fi
docker run \
    -d --restart=always -p "${reg_port}:5000" --name "${reg_name}" \
    registry:2

# Remove existing cluster if it exists
if [ -n "$($KIND_CMD get clusters | grep {{ kind_cluster_name }})" ];then
  $KIND_CMD delete cluster --name {{ kind_cluster_name }}
fi

# create a cluster with the local registry enabled in containerd
{% if kind_kube_ver == '' %}
cat <<EOF | $KIND_CMD create cluster --name {{ kind_cluster_name }} --config=-
{% else %}
cat <<EOF | $KIND_CMD create cluster --name {{ kind_cluster_name }} --image quay.io/powercloud/kind-node:{{ kind_kube_ver }} --config=-
{% endif %}

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
containerdConfigPatches:
- |-
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:${reg_port}"]
    endpoint = ["http://${reg_name}:${reg_port}"]
EOF

# connect the registry to the cluster network
docker network connect "kind" "${reg_name}"

# tell https://tilt.dev to use the registry
# https://docs.tilt.dev/choosing_clusters.html#discovering-the-registry
for node in $(kind get nodes --name {{ kind_cluster_name }}); do
  kubectl annotate node "${node}" "kind.x-k8s.io/registry=localhost:${reg_port}";
done
